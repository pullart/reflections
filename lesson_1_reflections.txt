1) How did viewing a diff between two versions of a file help you 
see the bug that was introduced?

Despite being a long file, I was able to identify exactly what
had changed between the two versions of the file.
This helped isolate the change and narrow down what I needed
to analyze.

2) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Identify when and where key changes were made, and who was responsible for it.
Trace back to why changes were made, if we know this.

3) What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Provides clarity on the purpose of each check-in. There's a logical atomicity that accompanies being able to decide when to make a commit, which makes it easire to revert/undo in the future if needed.

4) How can you use the commands git log and git diff to view the history of files?

Git log gives me a list of commits and why.
Once I narrow down what commit I want to focus on, I can do a diff of two commit versions to get the exact change I want.

5) How might using version control make you more confident to make changes that could break something?

It introduces traceability - I know exactly what mistake I made, and I can always revert to versions before that mistake was made. Like starting over.

6) Now that you have your workspace set up, what do you want to try using Git for?

Not sure... probably trying Intel's Github setup after all this is over.

